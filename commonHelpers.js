import{a as w,S as L,i as l}from"./assets/vendor-eded45c0.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function a(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=a(e);fetch(e.href,r)}})();function f(s){return s.map(({webformatURL:t,largeImageURL:a,tags:o,likes:e,views:r,comments:n,downloads:y})=>`
    <li class="gallery-item">
        <div class="gallery">
            <a class="gallery-link" href="${a}">
                <img class="gallery-img" src="${t}" alt="${o}" />
                <ul class="search-list">
                    <li class="info"><span class="info-item">Likes</span>${e}</li>
                    <li class="info"><span class="info-item">Views</span>${r}</li>
                    <li class="info"><span class="info-item">Comments</span>${n}</li>
                    <li class="info"><span class="info-item">Downloads</span>${y}</li>
                </ul>
            </a>
        </div>
        </li>
        `).join("")}async function g(s){const t="https://pixabay.com/api/",a="43499454-4c7e954d404e5474a5c884b10",o=new URLSearchParams({key:a,q:s,image_type:"photo",orientation:"horizontal",safesearch:!0});try{const e=await w.get(`${t}?${o}`);if(!e.status===200)throw new Error(e.status);return e.data}catch(e){throw console.error("Error fetching data:",e),e}}const b=document.querySelector("#search-form"),d=document.querySelector(".gallery"),u=document.querySelector(".loader"),m=document.querySelector(".load-more-btn"),p=new L(".gallery a",{captionsData:"alt",captionDelay:250});b.addEventListener("submit",C);m.addEventListener("click",S);let i=1,c="",h=0;async function C(s){if(s.preventDefault(),d.innerHTML="",i=1,c=s.currentTarget.elements.searchQuery.value.trim(),!c){l.show({title:"error",titleColor:"white",message:"Please, enter a word ",messageColor:"white",color:"red",position:"topCenter",timeout:"2000"});return}u.classList.toggle("is-hidden");try{const t=await g(c,i);if(t.total===0){l.show({title:"error",titleColor:"white",message:"Sorry, there are no images matching your search query. Please try again!",messageColor:"white",color:"red",position:"topCenter",timeout:"2000"});return}d.insertAdjacentHTML("beforeend",f(t.hits)),p.refresh(),s.target.reset(),h=Math.ceil(t.totalHits/15),i<h&&m.classList.remove("is-hidden")}catch(t){l.show({message:t.message})}finally{u.classList.toggle("is-hidden")}}async function S(){i+=1,u.classList.toggle("is-hidden");try{const s=await g(c,i);d.insertAdjacentHTML("beforeend",f(s.hits)),p.refresh();const{height:t}=d.firstElementChild.getBoundingClientRect();window.scrollBy({top:t*2,behavior:"smooth"}),i===h&&(m.classList.add("is-hidden"),l.show({title:"error",titleColor:"white",message:"We're sorry, but you've reached the end of search results.",messageColor:"white",color:"red",position:"topCenter",timeout:"2000"}))}catch(s){l.show({message:s.message})}finally{u.classList.toggle("is-hidden")}}
//# sourceMappingURL=commonHelpers.js.map
